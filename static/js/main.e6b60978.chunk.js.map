{"version":3,"sources":["pages/Users/index.jsx","components/Image/index.jsx","pages/About/index.jsx","pages/Page404/index.jsx","pages/Home/index.jsx","App.js","serviceWorker.js","index.js"],"names":["Users","Image","url","otherProps","src","onError","target","onClick","alert","About","useState","search","data","state","setState","useEffect","console","log","apiUrl","fetch","then","response","json","result","results","getImages","minLength","debounceTimeout","onChange","value","style","display","flexWrap","paddingLeft","map","val","key","id","href","urls","raw","download","small","Page404","Home","props","handleChange","this","Component","App","to","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e6b60978.chunk.js","sourcesContent":["import React from 'react'\n\n\nexport default function Users() {\n    return <h2>Users</h2>;\n  }","import React from 'react'\n\nexport default function Image({url,...otherProps}) {\n    const handleError=({target}) =>{\n        target.src='https://via.placeholder.com/150/92c952';\n    }\n\n    const handleClick=({target}) =>{\n        alert(target.src)\n    }\n    return (\n        <img src={url} {...otherProps} onError={handleError} onClick={handleClick}/>\n    )\n}\n","import React, { useState, useEffect } from \"react\";\nimport Image from \"components/Image\";\nimport { DebounceInput } from \"react-debounce-input\";\n\nexport default function About() {\n  const [state, setState] = useState({ search: null, data: [] });\n  // const [data, setdata] = useState({ search: \"\", data: [] });\n\n  const getImages = () => {\n    const clientId = \"TvVqwPIY_ZKFzAkzioLZtHyppyJy907FhHF4_REcJ9Y\";\n    const apiUrl = `https://api.unsplash.com/search/photos/?client_id=${clientId}&query=${state.search}`;\n\n    fetch(apiUrl)\n      .then((response) => response.json())\n      .then((result) => {\n        console.log(\"This is your data\", result);\n        setState({ ...state, data: result.results });\n      });\n  };\n\n  useEffect(() => {\n    console.log(\"search changed\");\n    if (state.search) getImages();\n  }, [state.search]);\n\n  useEffect(() => {\n    console.log(\"did mount\");\n\n    return () => {\n      console.log(\"unmounted\");\n    };\n  }, []);\n\n  const handleChange = ({ target }) => {\n    setState({ ...state, search: target.value });\n\n    console.log(target.value);\n    // this.getImages(target.value);\n    // this.setState({search:target.value},this.getImages)\n  };\n\n  return (\n    <>\n      <DebounceInput\n        minLength={4}\n        debounceTimeout={1000}\n        onChange={handleChange}\n        value={state.search}\n      />\n      <div style={{ display: \"flex\", flexWrap: \"wrap\", paddingLeft: 0 }}>\n        {state.data.map((val) => (\n          <a key={val.id} href={val.urls.raw} download>\n            <Image url={val.urls.small} />\n          </a>\n        ))}\n      </div>\n    </>\n  );\n}\n","import React from 'react'\n\nexport default function Page404() {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n","import React, { Component } from \"react\";\nimport Image from \"components/Image\";\nimport { DebounceInput } from \"react-debounce-input\";\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      search:''\n    };\n  }\n\n  componentDidMount() {\n    // this.getImages();\n  }\n\n  handleChange = ({ target }) => {\n    console.log(target.value);\n    // this.getImages(target.value);\n    this.setState({search:target.value},this.getImages)\n  };\n\n  getImages() {\n    const clientId = \"TvVqwPIY_ZKFzAkzioLZtHyppyJy907FhHF4_REcJ9Y\";\n    const apiUrl = `https://api.unsplash.com/search/photos/?client_id=${clientId}&query=${this.state.search}`;\n\n    fetch(apiUrl)\n      .then((response) => response.json())\n      .then((result) => {\n        console.log(\"This is your data\", result);\n        this.setState({ data: result.results });\n      });\n  }\n\n  render() {\n    const { data ,search} = this.state;\n\n    return (\n      <>\n        <DebounceInput\n          minLength={4}\n          debounceTimeout={1000}\n          onChange={this.handleChange}\n          value={search}\n        />\n        <div style={{ display: \"flex\", flexWrap: \"wrap\", paddingLeft: 0 }}>\n          {data.map((val) => (\n            <a href={val.urls.raw} download>\n              <Image url={val.urls.small} />\n            </a>\n          ))}\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\n\nimport Users from \"pages/Users\";\nimport About from \"pages/About\";\nimport Page404 from \"pages/Page404\";\nimport Home from \"pages/Home\";\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/about\">About</Link>\n            </li>\n            <li>\n              <Link to=\"/users\">Users</Link>\n            </li>\n          </ul>\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route exact path=\"/about\" component={About} />\n          <Route exact path=\"/users\" component={Users} />\n          <Route exact path=\"/\" component={Home} />\n          <Route component={Page404} />\n\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}